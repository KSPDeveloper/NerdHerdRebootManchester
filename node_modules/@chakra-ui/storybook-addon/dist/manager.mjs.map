{"version":3,"sources":["../src/manager.ts","../src/constants.ts","../src/color-mode/ColorModeTool.tsx","../src/direction/DirectionTool.tsx"],"names":["addons","types","ADDON_ID","COLOR_MODE_TOOL_ID","DIRECTION_TOOL_ID","EVENTS","IconButton","useAddonState","jsx","jsxs","MoonIcon","SunIcon","ColorModeTool","isDarkMode","darkMode","setDarkMode","channel","useCallback","useEffect","useGlobals","LTRIcon","props","RTLIcon","DirectionTool","globals","setGlobals","direction","setDirection","targetDirection","toggleDirection","match","viewMode"],"mappings":"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","sourcesContent":["import { addons, types } from \"@storybook/manager-api\"\nimport { ADDON_ID, COLOR_MODE_TOOL_ID, DIRECTION_TOOL_ID } from \"./constants\"\nimport { ColorModeTool } from \"./color-mode/ColorModeTool\"\nimport { DirectionTool } from \"./direction/DirectionTool\"\n\naddons.register(ADDON_ID, () => {\n  const match = ({ viewMode }: { viewMode?: string }) =>\n    Boolean(viewMode && viewMode.match(/^(story|docs)$/))\n\n  addons.add(DIRECTION_TOOL_ID, {\n    type: types.TOOL,\n    title: \"Direction\",\n    render: DirectionTool,\n    match,\n  })\n\n  addons.add(COLOR_MODE_TOOL_ID, {\n    type: types.TOOL,\n    title: \"Color Mode\",\n    render: ColorModeTool,\n    match,\n  })\n})\n","export const ADDON_ID = \"@chakra-ui/storybook-addon\"\nexport const COLOR_MODE_TOOL_ID = `${ADDON_ID}/color-mode-tool`\nexport const DIRECTION_TOOL_ID = `${ADDON_ID}/direction-tool`\n\nexport const EVENTS = {\n  TOGGLE_COLOR_MODE: `${ADDON_ID}/toggleColorMode`,\n  TOGGLE_DIRECTION: `${ADDON_ID}/toggleDirection`,\n}\n","import { IconButton } from \"@storybook/components\"\nimport { addons, useAddonState } from \"@storybook/manager-api\"\nimport { ADDON_ID, EVENTS } from \"../constants\"\n\nconst MoonIcon = () => (\n  <svg viewBox=\"0 0 24 24\" focusable=\"false\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.4,13.7C20.6,13.9,19.8,14,19,14c-5,0-9-4-9-9c0-0.8,0.1-1.6,0.3-2.4c0.1-0.3,0-0.7-0.3-1 c-0.3-0.3-0.6-0.4-1-0.3C4.3,2.7,1,7.1,1,12c0,6.1,4.9,11,11,11c4.9,0,9.3-3.3,10.6-8.1c0.1-0.3,0-0.7-0.3-1 C22.1,13.7,21.7,13.6,21.4,13.7z\"\n    ></path>\n  </svg>\n)\n\nconst SunIcon = () => (\n  <svg viewBox=\"0 0 24 24\" focusable=\"false\">\n    <g\n      strokeLinejoin=\"round\"\n      strokeLinecap=\"round\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n      <path d=\"M12 1v2\"></path>\n      <path d=\"M12 21v2\"></path>\n      <path d=\"M4.22 4.22l1.42 1.42\"></path>\n      <path d=\"M18.36 18.36l1.42 1.42\"></path>\n      <path d=\"M1 12h2\"></path>\n      <path d=\"M21 12h2\"></path>\n      <path d=\"M4.22 19.78l1.42-1.42\"></path>\n      <path d=\"M18.36 5.64l1.42-1.42\"></path>\n    </g>\n  </svg>\n)\n\n/**\n * This component is rendered in the Storybook toolbar\n */\nexport const ColorModeTool = () => {\n  const isDarkMode = localStorage.getItem(\"chakra-ui-color-mode\") === \"dark\"\n  const [darkMode, setDarkMode] = useAddonState(\n    `${ADDON_ID}/dark-mode`,\n    isDarkMode,\n  )\n\n  const channel = addons.getChannel()\n\n  const toggleDarkMode = () => {\n    channel.emit(EVENTS.TOGGLE_COLOR_MODE, !darkMode ? \"dark\" : \"light\")\n    setDarkMode(!darkMode)\n  }\n\n  return (\n    /* @ts-ignore */\n    <IconButton\n      active={darkMode}\n      title={`Set color mode to ${darkMode ? \"light\" : \"dark\"}`}\n      onClick={toggleDarkMode}\n      // ! Possible TypeError bug where the following props are required when they shouldn't be\n      content=\"\"\n      rel=\"\"\n      rev=\"\"\n    >\n      {darkMode ? <SunIcon /> : <MoonIcon />}\n    </IconButton>\n  )\n}\n","import { useCallback, useEffect } from \"react\"\nimport { addons, useAddonState, useGlobals } from \"@storybook/manager-api\"\nimport { IconButton } from \"@storybook/components\"\nimport { DIRECTION_TOOL_ID, EVENTS } from \"../constants\"\n\nconst LTRIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    stroke=\"currentColor\"\n    fill=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 24 24\"\n    height=\"1em\"\n    width=\"1em\"\n    style={{\n      transform: \"scale(1.2)\",\n    }}\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M9 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2H9C6.79 2 5 3.79 5 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zm0 12v3H5v2h12v3l4-4-4-4z\" />\n  </svg>\n)\n\nconst RTLIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    stroke=\"currentColor\"\n    fill=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 24 24\"\n    height=\"1em\"\n    width=\"1em\"\n    style={{\n      transform: \"scale(1.2)\",\n    }}\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M10 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zM8 14l-4 4 4 4v-3h12v-2H8v-3z\" />\n  </svg>\n)\n\n/**\n * This component is rendered in the Storybook toolbar\n */\nexport const DirectionTool = () => {\n  const [globals, setGlobals] = useGlobals()\n  const [direction, setDirection] = useAddonState(\n    DIRECTION_TOOL_ID,\n    globals[DIRECTION_TOOL_ID] || \"ltr\",\n  )\n  const targetDirection = direction !== \"ltr\" ? \"ltr\" : \"rtl\"\n  useEffect(() => {\n    setGlobals({ [DIRECTION_TOOL_ID]: direction })\n  }, [direction, setGlobals])\n\n  const toggleDirection = useCallback(() => {\n    const channel = addons.getChannel()\n    channel.emit(EVENTS.TOGGLE_DIRECTION, targetDirection)\n    setDirection(targetDirection)\n  }, [setDirection, targetDirection])\n\n  return (\n    /* @ts-ignore */\n    <IconButton\n      active={direction === \"rtl\"}\n      title={`Set layout direction to ${targetDirection}`}\n      onClick={toggleDirection}\n      // ! Possible TypeError bug where the following props are required when they shouldn't be\n      content=\"\"\n      rel=\"\"\n      rev=\"\"\n    >\n      {targetDirection === \"ltr\" ? <LTRIcon /> : <RTLIcon />}\n    </IconButton>\n  )\n}\n"]}