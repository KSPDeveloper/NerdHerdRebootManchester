'use strict';

var react$1 = require('react');
var react = require('@chakra-ui/react');
var previewApi = require('@storybook/preview-api');
var jsxRuntime = require('react/jsx-runtime');

var m="@chakra-ui/storybook-addon",a=`${m}/direction-tool`,i={TOGGLE_COLOR_MODE:`${m}/toggleColorMode`,TOGGLE_DIRECTION:`${m}/toggleDirection`};function s(){let{setColorMode:e}=react.useColorMode();return react$1.useEffect(()=>{let r=previewApi.addons.getChannel(),o=t=>e(t);return r.on(i.TOGGLE_COLOR_MODE,o),()=>{r.removeListener(i.TOGGLE_COLOR_MODE,o);}},[e]),null}var l=(e="ltr")=>{let[r,o]=react$1.useState(e.toLowerCase());return react$1.useEffect(()=>{document.documentElement.dir=r;},[r]),react$1.useEffect(()=>{let t=previewApi.addons.getChannel(),n=c=>o(c);return t.on(i.TOGGLE_DIRECTION,n),()=>{t.removeListener(i.TOGGLE_DIRECTION,n);}},[o]),r};var O=(e,r)=>{let{parameters:{chakra:o},globals:{[a]:t}}=r,n=o?.theme?typeof o.theme=="function"?o.theme(r):o.theme:react.theme,c=l(t||n?.direction),p=react$1.useMemo(()=>react.extendTheme({direction:c},n),[n,c]);return jsxRuntime.jsxs(react.ChakraProvider,{...o,theme:p,children:[jsxRuntime.jsx(s,{}),e(r)]})};var k={decorators:[O]},B=k;

module.exports = B;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=preview.js.map