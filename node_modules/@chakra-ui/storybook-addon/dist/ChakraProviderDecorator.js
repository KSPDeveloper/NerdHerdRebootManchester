'use strict';

var react$1 = require('react');
var react = require('@chakra-ui/react');
var previewApi = require('@storybook/preview-api');
var jsxRuntime = require('react/jsx-runtime');

var m="@chakra-ui/storybook-addon",s=`${m}/direction-tool`,c={TOGGLE_COLOR_MODE:`${m}/toggleColorMode`,TOGGLE_DIRECTION:`${m}/toggleDirection`};function a(){let{setColorMode:r}=react.useColorMode();return react$1.useEffect(()=>{let e=previewApi.addons.getChannel(),o=t=>r(t);return e.on(c.TOGGLE_COLOR_MODE,o),()=>{e.removeListener(c.TOGGLE_COLOR_MODE,o);}},[r]),null}var l=(r="ltr")=>{let[e,o]=react$1.useState(r.toLowerCase());return react$1.useEffect(()=>{document.documentElement.dir=e;},[e]),react$1.useEffect(()=>{let t=previewApi.addons.getChannel(),n=i=>o(i);return t.on(c.TOGGLE_DIRECTION,n),()=>{t.removeListener(c.TOGGLE_DIRECTION,n);}},[o]),e};var A=(r,e)=>{let{parameters:{chakra:o},globals:{[s]:t}}=e,n=o?.theme?typeof o.theme=="function"?o.theme(e):o.theme:react.theme,i=l(t||n?.direction),d=react$1.useMemo(()=>react.extendTheme({direction:i},n),[n,i]);return jsxRuntime.jsxs(react.ChakraProvider,{...o,theme:d,children:[jsxRuntime.jsx(a,{}),r(e)]})};

exports.ChakraProviderDecorator = A;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=ChakraProviderDecorator.js.map