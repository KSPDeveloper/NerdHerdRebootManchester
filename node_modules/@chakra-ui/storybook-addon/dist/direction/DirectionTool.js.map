{"version":3,"sources":["../../src/direction/DirectionTool.tsx","../../src/constants.ts"],"names":["useCallback","useEffect","addons","useAddonState","useGlobals","IconButton","ADDON_ID","COLOR_MODE_TOOL_ID","DIRECTION_TOOL_ID","EVENTS","jsx","jsxs","LTRIcon","props","RTLIcon","DirectionTool","globals","setGlobals","direction","setDirection","targetDirection","toggleDirection"],"mappings":"AAAA,OAAS,eAAAA,EAAa,aAAAC,MAAiB,QACvC,OAAS,UAAAC,EAAQ,iBAAAC,EAAe,cAAAC,MAAkB,yBAClD,OAAS,cAAAC,MAAkB,wBCFpB,IAAMC,EAAW,6BACXC,EAAqB,GAAGD,oBACxBE,EAAoB,GAAGF,mBAEvBG,EAAS,CACpB,kBAAmB,GAAGH,oBACtB,iBAAkB,GAAGA,mBACvB,EDDE,OAYE,OAAAI,EAZF,QAAAC,MAAA,oBADF,IAAMC,EAAWC,GACfF,EAAC,OACC,OAAO,eACP,KAAK,eACL,YAAY,IACZ,QAAQ,YACR,OAAO,MACP,MAAM,MACN,MAAO,CACL,UAAW,YACb,EACC,GAAGE,EAEJ,UAAAH,EAAC,QAAK,KAAK,OAAO,EAAE,kBAAkB,EACtCA,EAAC,QAAK,EAAE,kHAAkH,GAC5H,EAGII,EAAWD,GACfF,EAAC,OACC,OAAO,eACP,KAAK,eACL,YAAY,IACZ,QAAQ,YACR,OAAO,MACP,MAAM,MACN,MAAO,CACL,UAAW,YACb,EACC,GAAGE,EAEJ,UAAAH,EAAC,QAAK,KAAK,OAAO,EAAE,kBAAkB,EACtCA,EAAC,QAAK,EAAE,wHAAwH,GAClI,EAMWK,EAAgB,IAAM,CACjC,GAAM,CAACC,EAASC,CAAU,EAAIb,EAAW,EACnC,CAACc,EAAWC,CAAY,EAAIhB,EAChCK,EACAQ,EAAQR,CAAiB,GAAK,KAChC,EACMY,EAAkBF,IAAc,MAAQ,MAAQ,MACtDjB,EAAU,IAAM,CACdgB,EAAW,CAAE,CAACT,CAAiB,EAAGU,CAAU,CAAC,CAC/C,EAAG,CAACA,EAAWD,CAAU,CAAC,EAE1B,IAAMI,EAAkBrB,EAAY,IAAM,CACxBE,EAAO,WAAW,EAC1B,KAAKO,EAAO,iBAAkBW,CAAe,EACrDD,EAAaC,CAAe,CAC9B,EAAG,CAACD,EAAcC,CAAe,CAAC,EAElC,OAEEV,EAACL,EAAA,CACC,OAAQa,IAAc,MACtB,MAAO,2BAA2BE,IAClC,QAASC,EAET,QAAQ,GACR,IAAI,GACJ,IAAI,GAEH,SAAAD,IAAoB,MAAQV,EAACE,EAAA,EAAQ,EAAKF,EAACI,EAAA,EAAQ,EACtD,CAEJ","sourcesContent":["import { useCallback, useEffect } from \"react\"\nimport { addons, useAddonState, useGlobals } from \"@storybook/manager-api\"\nimport { IconButton } from \"@storybook/components\"\nimport { DIRECTION_TOOL_ID, EVENTS } from \"../constants\"\n\nconst LTRIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    stroke=\"currentColor\"\n    fill=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 24 24\"\n    height=\"1em\"\n    width=\"1em\"\n    style={{\n      transform: \"scale(1.2)\",\n    }}\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M9 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2H9C6.79 2 5 3.79 5 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zm0 12v3H5v2h12v3l4-4-4-4z\" />\n  </svg>\n)\n\nconst RTLIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    stroke=\"currentColor\"\n    fill=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 24 24\"\n    height=\"1em\"\n    width=\"1em\"\n    style={{\n      transform: \"scale(1.2)\",\n    }}\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n    <path d=\"M10 4v4c-1.1 0-2-.9-2-2s.9-2 2-2m8-2h-8C7.79 2 6 3.79 6 6s1.79 4 4 4v5h2V4h2v11h2V4h2V2zM8 14l-4 4 4 4v-3h12v-2H8v-3z\" />\n  </svg>\n)\n\n/**\n * This component is rendered in the Storybook toolbar\n */\nexport const DirectionTool = () => {\n  const [globals, setGlobals] = useGlobals()\n  const [direction, setDirection] = useAddonState(\n    DIRECTION_TOOL_ID,\n    globals[DIRECTION_TOOL_ID] || \"ltr\",\n  )\n  const targetDirection = direction !== \"ltr\" ? \"ltr\" : \"rtl\"\n  useEffect(() => {\n    setGlobals({ [DIRECTION_TOOL_ID]: direction })\n  }, [direction, setGlobals])\n\n  const toggleDirection = useCallback(() => {\n    const channel = addons.getChannel()\n    channel.emit(EVENTS.TOGGLE_DIRECTION, targetDirection)\n    setDirection(targetDirection)\n  }, [setDirection, targetDirection])\n\n  return (\n    /* @ts-ignore */\n    <IconButton\n      active={direction === \"rtl\"}\n      title={`Set layout direction to ${targetDirection}`}\n      onClick={toggleDirection}\n      // ! Possible TypeError bug where the following props are required when they shouldn't be\n      content=\"\"\n      rel=\"\"\n      rev=\"\"\n    >\n      {targetDirection === \"ltr\" ? <LTRIcon /> : <RTLIcon />}\n    </IconButton>\n  )\n}\n","export const ADDON_ID = \"@chakra-ui/storybook-addon\"\nexport const COLOR_MODE_TOOL_ID = `${ADDON_ID}/color-mode-tool`\nexport const DIRECTION_TOOL_ID = `${ADDON_ID}/direction-tool`\n\nexport const EVENTS = {\n  TOGGLE_COLOR_MODE: `${ADDON_ID}/toggleColorMode`,\n  TOGGLE_DIRECTION: `${ADDON_ID}/toggleDirection`,\n}\n"]}