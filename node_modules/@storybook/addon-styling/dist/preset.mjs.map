{"version":3,"sources":["../src/webpack/css/webpack.ts","../src/webpack/scss/webpack.ts","../src/webpack/less/webpack.ts","../src/webpack/webpackFinal.ts","../src/vite/viteFinal.ts","../src/preset.ts"],"names":["isRuleForCSS","rule","buildStyleLoader","options","__require","buildCssLoader","cssModules","postCss","importSettings","moduleSettings","buildPostCssLoader","implementationOptions","CSS_FILE_REGEX","buildCssRule","buildRule","patchOrAddCssRule","config","rules","cssRule","ruleIndex","isRuleForSCSS","buildUrlResolverLoader","buildSassLoader","sass","sassOptions","additionalData","SCSS_FILE_REGEX","buildScssRule","patchOrAddScssRule","isRuleForLESS","buildLessLoader","less","LESS_FILE_REGEX","buildLessRule","patchOrAddLessRule","webpackFinal","logger","colors","viteFinal"],"mappings":"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","sourcesContent":["import type { RuleSetRule, Configuration as WebpackConfig } from \"webpack\";\nimport type { AddonStylingOptions } from \"../../types\";\n\nconst isRuleForCSS = (rule: RuleSetRule) =>\n  typeof rule !== \"string\" &&\n  rule.test instanceof RegExp &&\n  rule.test.test(\"test.css\");\n\nconst buildStyleLoader = (options: AddonStylingOptions) => ({\n  loader: require.resolve(\"style-loader\"),\n});\n\nconst buildCssLoader = ({ cssModules, postCss }: AddonStylingOptions) => {\n  const importSettings = postCss ? { importLoaders: 1 } : {};\n  const moduleSettings = cssModules ? { modules: { auto: true } } : {};\n\n  return {\n    loader: require.resolve(\"css-loader\"),\n    options: {\n      ...importSettings,\n      ...moduleSettings,\n    },\n  };\n};\n\nconst buildPostCssLoader = ({ postCss }: AddonStylingOptions) => {\n  const implementationOptions =\n    typeof postCss === \"object\" ? { ...postCss } : {};\n\n  return {\n    loader: require.resolve(\"postcss-loader\"),\n    options: {\n      ...implementationOptions,\n    },\n  };\n};\n\nconst CSS_FILE_REGEX = /\\.css$/;\nconst buildCssRule = (options: AddonStylingOptions): RuleSetRule => {\n  if (options.cssBuildRule) return options.cssBuildRule;\n\n  const buildRule = [\n    buildStyleLoader(options),\n    buildCssLoader(options),\n    ...(options.postCss ? [buildPostCssLoader(options)] : []),\n  ];\n  return {\n    test: CSS_FILE_REGEX,\n    use: buildRule,\n    sideEffects: true,\n  };\n};\n\nexport const patchOrAddCssRule = (\n  config: WebpackConfig,\n  options: AddonStylingOptions\n): void => {\n  // If the user doesn't want to patch webpack for postcss or css modules\n  if (!options.postCss && !options.cssModules && !options.cssBuildRule) {\n    // return without adjusting config\n    return;\n  }\n\n  const rules = config.module?.rules;\n\n  const cssRule = buildCssRule(options);\n  const ruleIndex = rules?.findIndex(isRuleForCSS);\n\n  if (ruleIndex === -1) {\n    // If no existing css rule, add it\n    rules?.push(cssRule);\n  } else {\n    // If existing css rule, replace it\n    rules[ruleIndex] = cssRule;\n  }\n};\n","import type { RuleSetRule, Configuration as WebpackConfig } from \"webpack\";\nimport type { AddonStylingOptions } from \"../../types\";\n\nconst isRuleForSCSS = (rule: RuleSetRule) =>\n  typeof rule !== \"string\" &&\n  rule.test instanceof RegExp &&\n  (rule.test.test(\"test.scss\") || rule.test.test(\"test.sass\"));\n\nconst buildStyleLoader = (options: AddonStylingOptions) => ({\n  loader: require.resolve(\"style-loader\"),\n});\n\nconst buildCssLoader = ({ cssModules, postCss }: AddonStylingOptions) => {\n  const importSettings = { importLoaders: postCss ? 3 : 2 };\n  const moduleSettings = cssModules ? { modules: { auto: true } } : {};\n\n  return {\n    loader: require.resolve(\"css-loader\"),\n    options: {\n      ...importSettings,\n      ...moduleSettings,\n    },\n  };\n};\n\nconst buildPostCssLoader = ({ postCss }: AddonStylingOptions) => {\n  const implementationOptions =\n    typeof postCss === \"object\" ? { ...postCss } : {};\n\n  return {\n    loader: require.resolve(\"postcss-loader\"),\n    options: {\n      ...implementationOptions,\n    },\n  };\n};\n\nconst buildUrlResolverLoader = (options: AddonStylingOptions) => ({\n  loader: require.resolve(\"resolve-url-loader\"),\n});\n\nconst buildSassLoader = ({ sass }: AddonStylingOptions) => {\n  const sassOptions = typeof sass === \"object\" ? { sassOptions: sass } : {};\n\n  const implementationOptions =\n    typeof sass === \"object\" && sass.hasOwnProperty(\"implementation\")\n      ? // @ts-expect-error\n        { implementation: sass.implementation }\n      : {};\n\n  const additionalData =\n    typeof sass === \"object\" &&\n    (sass.hasOwnProperty(\"prependData\") ||\n      sass.hasOwnProperty(\"additionalData\"))\n      ? // @ts-expect-error\n        { additionalData: sass.prependData || sass.additionalData }\n      : {};\n\n  return {\n    loader: require.resolve(\"sass-loader\"),\n    options: {\n      sourceMap: true,\n      ...sassOptions,\n      ...implementationOptions,\n      ...additionalData,\n    },\n  };\n};\n\nconst SCSS_FILE_REGEX = /\\.s[ac]ss$/;\nconst buildScssRule = (options: AddonStylingOptions): RuleSetRule => {\n  if (options.scssBuildRule) return options.scssBuildRule;\n\n  const buildRule = [\n    buildStyleLoader(options),\n    buildCssLoader(options),\n    ...(options.postCss ? [buildPostCssLoader(options)] : []),\n    buildUrlResolverLoader(options),\n    buildSassLoader(options),\n  ];\n  return {\n    test: SCSS_FILE_REGEX,\n    use: buildRule,\n    sideEffects: true,\n  };\n};\n\nexport const patchOrAddScssRule = (\n  config: WebpackConfig,\n  options: AddonStylingOptions\n): void => {\n  // If the user doesn't want to patch webpack for postcss or css modules\n  if (!options.sass && !options.scssBuildRule) {\n    // return without adjusting config\n    return;\n  }\n\n  const rules = config.module?.rules;\n\n  const rule = buildScssRule(options);\n  const ruleIndex = rules?.findIndex(isRuleForSCSS);\n\n  if (ruleIndex === -1) {\n    // If no existing css rule, add it\n    rules?.push(rule);\n  } else {\n    // If existing css rule, replace it\n    rules[ruleIndex] = rule;\n  }\n};\n","import type { RuleSetRule, Configuration as WebpackConfig } from \"webpack\";\nimport type { AddonStylingOptions } from \"../../types\";\n\nconst isRuleForLESS = (rule: RuleSetRule) =>\n  typeof rule !== \"string\" &&\n  rule.test instanceof RegExp &&\n  rule.test.test(\"test.less\");\n\nconst buildStyleLoader = (options: AddonStylingOptions) => ({\n  loader: require.resolve(\"style-loader\"),\n});\n\nconst buildCssLoader = ({ cssModules, postCss }: AddonStylingOptions) => {\n  const importSettings = { importLoaders: postCss ? 2 : 1 };\n  const moduleSettings = cssModules ? { modules: { auto: true } } : {};\n\n  return {\n    loader: require.resolve(\"css-loader\"),\n    options: {\n      ...importSettings,\n      ...moduleSettings,\n    },\n  };\n};\n\nconst buildPostCssLoader = ({ postCss }: AddonStylingOptions) => {\n  const implementationOptions =\n    typeof postCss === \"object\" ? { ...postCss } : {};\n\n  return {\n    loader: require.resolve(\"postcss-loader\"),\n    options: {\n      ...implementationOptions,\n    },\n  };\n};\n\nconst buildLessLoader = ({ less }: AddonStylingOptions) => {\n  const implementationOptions =\n    typeof less === \"object\" && less.hasOwnProperty(\"implementation\")\n      ? { implementation: less.implementation }\n      : {};\n\n  const additionalData =\n    typeof less === \"object\" && less.hasOwnProperty(\"additionalData\")\n      ? { additionalData: less.additionalData }\n      : {};\n\n  return {\n    loader: require.resolve(\"less-loader\"),\n    options: {\n      sourceMap: true,\n      lessOptions: less.lessOptions ?? {},\n      ...implementationOptions,\n      ...additionalData,\n    },\n  };\n};\n\nconst LESS_FILE_REGEX = /\\.less$/i;\nconst buildLessRule = (options: AddonStylingOptions): RuleSetRule => {\n  if (options.scssBuildRule) return options.scssBuildRule;\n\n  const buildRule = [\n    buildStyleLoader(options),\n    buildCssLoader(options),\n    ...(options.postCss ? [buildPostCssLoader(options)] : []),\n    buildLessLoader(options),\n  ];\n  return {\n    test: LESS_FILE_REGEX,\n    use: buildRule,\n    sideEffects: true,\n  };\n};\n\nexport const patchOrAddLessRule = (\n  config: WebpackConfig,\n  options: AddonStylingOptions\n): void => {\n  // If the user doesn't want to patch webpack for postcss or css modules\n  if (!options.less && !options.lessBuildRule) {\n    // return without adjusting config\n    return;\n  }\n\n  const rules = config.module?.rules;\n\n  const rule = buildLessRule(options);\n  const ruleIndex = rules?.findIndex(isRuleForLESS);\n\n  if (ruleIndex === -1) {\n    // If no existing css rule, add it\n    rules?.push(rule);\n  } else {\n    // If existing css rule, replace it\n    rules[ruleIndex] = rule;\n  }\n};\n","import type { Configuration as WebpackConfig } from \"webpack\";\nimport type { AddonStylingOptions } from \"../types\";\n\nimport { patchOrAddCssRule } from \"./css/webpack\";\nimport { patchOrAddScssRule } from \"./scss/webpack\";\nimport { patchOrAddLessRule } from \"./less/webpack\";\n\nexport function webpackFinal(\n  config: WebpackConfig,\n  options: AddonStylingOptions = {}\n) {\n  patchOrAddCssRule(config, options);\n  patchOrAddScssRule(config, options);\n  patchOrAddLessRule(config, options);\n\n  return config;\n}\n","import { logger, colors } from \"@storybook/node-logger\";\nimport type { AddonStylingOptions } from \"../types\";\n\nexport function viteFinal(config: any, options: AddonStylingOptions = {}) {\n  if (options.cssModules) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.cssModules\"\n      )}\" is for webpack only. Vite comes preconfigured with css-module support.`\n    );\n  }\n  if (options.cssBuildRule) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.cssBuildRule\"\n      )}\" is for webpack only. To customize your CSS build, update your Vite config.`\n    );\n  }\n\n  if (options.postCss) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.postCss\"\n      )}\" is for webpack only. Vite comes preconfigured with PostCSS support.`\n    );\n  }\n\n  if (options.sass) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.sass\"\n      )}\" is for webpack only. Vite comes preconfigured with Sass/Scss support.`\n    );\n  }\n  if (options.scssBuildRule) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.scssBuildRule\"\n      )}\" is for webpack only. Vite comes preconfigured with Sass/Scss support.`\n    );\n  }\n\n  if (options.less) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.less\"\n      )}\" is for webpack only. Vite comes preconfigured with Less support.`\n    );\n  }\n  if (options.lessBuildRule) {\n    logger.warn(\n      `[@storybook/addon-styling] \"${colors.blue(\n        \"options.lessBuildRule\"\n      )}\" is for webpack only. Vite comes preconfigured with Less support.`\n    );\n  }\n\n  return config;\n}\n","import { webpackFinal as webpack } from \"./webpack/webpackFinal\";\nimport { viteFinal as vite } from \"./vite/viteFinal\";\n\nexport const webpackFinal = webpack as any;\n\nexport const viteFinal = vite as any;\n"]}